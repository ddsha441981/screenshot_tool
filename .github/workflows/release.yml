name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required for creating releases
      actions: write   # Required for workflow operations
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: Screenshot Tool ${{ github.ref_name }}
          body: |
            # ðŸš€ Screenshot Tool ${{ github.ref_name }}
            
            A fast, cross-platform screenshot capture tool built with Rust.
            
            ## âœ¨ Features
            - Multiple capture modes (fullscreen, selection, window)
            - Cross-platform support (Linux, macOS, Windows)
            - CLI interface with advanced options
            - Fast performance with minimal overhead
            
            ## ðŸ“¥ Downloads
            Choose the appropriate version for your platform:
            
            - **Linux x64**: `screenshot-${{ github.ref_name }}-linux-x86_64.tar.gz`
            - **Windows x64**: `screenshot-${{ github.ref_name }}-windows-x86_64.zip`
            - **macOS Intel**: `screenshot-${{ github.ref_name }}-macos-x86_64.tar.gz`
            - **macOS Apple Silicon**: `screenshot-${{ github.ref_name }}-macos-aarch64.tar.gz`
            
            ## ðŸ›  Installation
            1. Download the appropriate file for your platform
            2. Extract the archive
            3. Move the binary to your PATH (e.g., `/usr/local/bin` or `~/.local/bin`)
            4. Make it executable: `chmod +x screenshot` (Linux/macOS)
            
            ## ðŸ“‹ Usage
            ```
            screenshot fullscreen    # Capture full screen
            screenshot selection     # Capture selected area
            screenshot window        # Capture specific window
            screenshot list          # List available screens
            screenshot --help        # Show all options
            ```
          draft: false
          prerelease: false

  build-and-upload:
    needs: create-release
    permissions:
      contents: write  # Required for uploading assets
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: linux-x86_64
            archive: tar.gz
          - os: ubuntu-latest
            target: x86_64-pc-windows-gnu
            name: windows-x86_64
            archive: zip
          - os: macos-latest
            target: x86_64-apple-darwin
            name: macos-x86_64
            archive: tar.gz
          - os: macos-latest
            target: aarch64-apple-darwin
            name: macos-aarch64
            archive: tar.gz

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install Windows dependencies
        if: matrix.target == 'x86_64-pc-windows-gnu'
        run: |
          sudo apt update
          sudo apt install -y mingw-w64

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare Linux/macOS release
        if: matrix.archive == 'tar.gz'
        run: |
          mkdir -p release
          cp target/${{ matrix.target }}/release/screenshot release/
          cd release
          tar -czf ../screenshot-${{ github.ref_name }}-${{ matrix.name }}.tar.gz screenshot

      - name: Prepare Windows release
        if: matrix.archive == 'zip'
        run: |
          mkdir -p release
          cp target/${{ matrix.target }}/release/screenshot.exe release/
          cd release
          zip ../screenshot-${{ github.ref_name }}-${{ matrix.name }}.zip screenshot.exe

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            screenshot-${{ github.ref_name }}-${{ matrix.name }}.*
